// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  FREE
  PREMIUM
  ADMIN
}

model User {
  uid       String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @db.VarChar(320)
  name      String?  @db.VarChar(64)
  type      UserType
  items     Item[]
}

enum ItemType {
  IMAGE
  VIDEO
}

enum Processed {
  NO
  STARTED
  FAIL
  V1
}

model Item {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  private   Boolean  @default(false)
  User      User     @relation(fields: [userUid], references: [uid])
  userUid   String
  type      ItemType

  processed Processed @default(NO) // Are thumbnails generated
  optimized Processed @default(NO) // Is original video optimized for viewing

  thumbnails Thumbnail[]
  Image      Image[]
  Video      Video[]
  tags       TagsOnItems[]
}

enum ThumbnailType {
  XS
  SM
  MD
}

model Thumbnail {
  id        Int           @id @default(autoincrement())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  Item      Item          @relation(fields: [itemId], references: [id])
  itemId    Int
  type      ThumbnailType
  width     Int
  height    Int

  path String @db.VarChar(256)
  size Int
}

enum MediaType {
  SOURCE
  COMPRESSED
}

model Image {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int

  mediaType MediaType @default(SOURCE)
  path      String    @db.VarChar(256)
  size      Int
  width     Int
  height    Int
  animated  Boolean
}

model Video {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int

  mediaType  MediaType @default(SOURCE)
  path       String    @db.VarChar(256)
  size       Int       @db.UnsignedInt
  width      Int       @db.UnsignedSmallInt
  height     Int       @db.UnsignedSmallInt
  durationMs Int       @db.UnsignedInt
  bitrateKb  Int       @db.UnsignedSmallInt
}

model Tag {
  id    Int           @id @default(autoincrement())
  name  String        @unique // lowercase always
  items TagsOnItems[]
}

model TagsOnItems {
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
  assignedAt DateTime @default(now())

  @@id([itemId, tagId])
}
